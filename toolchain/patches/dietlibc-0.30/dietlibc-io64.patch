--- dietlibc-0.30/libstdio/fopen64.c.io64	2008-03-18 19:55:07.000000000 +0100
+++ dietlibc-0.30/libstdio/fopen64.c	2008-03-18 19:54:55.000000000 +0100
@@ -0,0 +1,22 @@
+#include <sys/types.h>
+#include <dietstdio.h>
+#include <unistd.h>
+
+#if __WORDSIZE == 32
+extern int __stdio_atexit;
+
+/* this is needed so the libpthread wrapper can initialize the mutex,
+ * not to lock it */
+
+FILE *fopen64_unlocked(const char *path, const char *mode) {
+  int f=0;	/* O_RDONLY, O_WRONLY or O_RDWR */
+  int fd;
+
+  f=__stdio_parse_mode(mode);
+  if ((fd=__libc_open64(path,f,0666))<0)
+    return 0;
+  return __stdio_init_file(fd,1,f);
+}
+
+FILE *fopen64(const char *path, const char *mode) __attribute__((weak,alias("fopen64_unlocked")));
+#endif
--- dietlibc-0.30/include/stdio.h.io64	2008-03-18 19:56:58.000000000 +0100
+++ dietlibc-0.30/include/stdio.h	2008-03-18 19:58:44.000000000 +0100
@@ -97,6 +97,8 @@
 int fseeko64_unlocked(FILE *stream, loff_t offset, int whence) __THROW;
 loff_t ftello64(FILE *stream) __THROW;
 loff_t ftello64_unlocked(FILE *stream) __THROW;
+FILE *fopen64(const char *path, const char *mode) __THROW;
+FILE *fopen64_unlocked(const char *path, const char *mode) __THROW;
 
 #if defined _FILE_OFFSET_BITS && _FILE_OFFSET_BITS == 64
 #define off_t loff_t
