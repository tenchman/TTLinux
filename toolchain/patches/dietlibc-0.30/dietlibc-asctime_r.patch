--- dietlibc-0.30/libugly/asctime_r.c.asctime_r	2001-07-20 15:10:07.000000000 +0200
+++ dietlibc-0.30/libugly/asctime_r.c	2008-07-23 08:52:37.000000000 +0200
@@ -1,7 +1,12 @@
 #include <time.h>
 
-static const char days[] = "Sun Mon Tue Wed Thu Fri Sat ";
-static const char months[] = "Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec ";
+typedef union {
+  uint32_t *u;
+  char *c;
+} abbrev_t;
+
+static const abbrev_t days = { .c = "Sun Mon Tue Wed Thu Fri Sat " };
+static const abbrev_t months = { .c = "Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec " };
 
 static void num2str(char *c,int i) {
   c[0]=i/10+'0';
@@ -9,9 +14,10 @@ static void num2str(char *c,int i) {
 }
 
 char *asctime_r(const struct tm *t, char *buf) {
-  /* "Wed Jun 30 21:49:08 1993\n" */
-  *(int*)buf=*(int*)(days+(t->tm_wday<<2));
-  *(int*)(buf+4)=*(int*)(months+(t->tm_mon<<2));
+  abbrev_t c = { .c = buf };
+  /* "Wed Jun 30 21:49:08 1993\n\0" */
+  c.u[0] = days.u[t->tm_wday];
+  c.u[1] = months.u[t->tm_mon];
   num2str(buf+8,t->tm_mday);
   if (buf[8]=='0') buf[8]=' ';
   buf[10]=' ';
@@ -25,5 +31,6 @@ char *asctime_r(const struct tm *t, char
   num2str(buf+20,(t->tm_year+1900)/100);
   num2str(buf+22,(t->tm_year+1900)%100);
   buf[24]='\n';
+  buf[25]='\0';
   return buf;
 }
--- dietlibc-0.30/libugly/asctime.c.asc	2008-07-23 10:40:41.000000000 +0200
+++ dietlibc-0.30/libugly/asctime.c	2008-07-23 10:41:57.000000000 +0200
@@ -1,6 +1,6 @@
 #include <time.h>
 
-static char buf[25];
+static char buf[32] __attribute__((aligned(4)));
 
 char *asctime(const struct tm *timeptr) {
   return asctime_r(timeptr,buf);
