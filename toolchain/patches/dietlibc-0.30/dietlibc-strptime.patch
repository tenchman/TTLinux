--- dietlibc-0.30/libugly/strptime.c.strptime	2005-08-10 13:15:02.000000000 +0200
+++ dietlibc-0.30/libugly/strptime.c	2007-07-31 13:43:06.000000000 +0200
@@ -3,6 +3,8 @@
 #include <string.h>
 #include <strings.h>
 
+extern const short  __spm [];
+
 static const char*  months [12] = { 
     "January", "February", "March", "April", "May", "June",
     "July", "August", "September", "October", "November", "December"
@@ -22,6 +24,8 @@ static int getint(const char** s,int max
 
 char* strptime(const char* s,const char* format, struct tm* tm) {
   int i,j;
+  register time_t  day;
+  
   while (*format) {
     switch (*format) {
     case ' ': case '\t':
@@ -32,7 +36,7 @@ char* strptime(const char* s,const char*
     case '%':
       ++format;
       switch (*format) {
-      case '%': if (*s=='%') ++s; else return (char*)s; break;
+      case '%': if (*s=='%') ++s; else return NULL; break;
       case 'a': case 'A': /* weekday; we just skip */
 	for (i=0; i<3; ++i)
 	  if (isalpha(*s)) ++s;
@@ -44,7 +48,7 @@ char* strptime(const char* s,const char*
 	      j=0;
 	  if (j) break;
 	}
-	if (!j) return (char*)s;
+	if (!j) return NULL;
 	s+=j;
 	tm->tm_mon=i;
 	break;
@@ -53,12 +57,12 @@ char* strptime(const char* s,const char*
 	break;
       case 'C':
 	i=getint(&s,2);
-	if (i==-1) return (char*)s;
+	if (i==-1) return NULL;
 	tm->tm_year=(tm->tm_year%100)+(i*100);
 	break;
       case 'd': case 'e':
 	i=getint(&s,2);
-	if (i==-1 || i>31) return (char*)s;
+	if (i==-1 || i>31) return NULL;
 	tm->tm_mday=i;
 	break;
       case 'D':
@@ -66,12 +70,12 @@ char* strptime(const char* s,const char*
 	break;
       case 'H': case 'k':
 	i=getint(&s,2);
-	if (i==-1 || i>23) return (char*)s;
+	if (i==-1 || i>23) return NULL;
 	tm->tm_hour=i;
 	break;
       case 'I': case 'l':
 	i=getint(&s,2);
-	if (i==-1 || i>12) return (char*)s;
+	if (i==-1 || i>12) return NULL;
 	tm->tm_hour=(tm->tm_hour/12)*12+i;
 	break;
       case 'j':
@@ -79,12 +83,12 @@ char* strptime(const char* s,const char*
 	break;
       case 'm':
 	i=getint(&s,2);
-	if (i<=0 || i>12) return (char*)s;
+	if (i<=0 || i>12) return NULL;
 	tm->tm_mon=i-1;
 	break;
       case 'M':
 	i=getint(&s,2);
-	if (i==-1 || i>59) return (char*)s;
+	if (i==-1 || i>59) return NULL;
 	tm->tm_min=i;
 	break;
       case 'n': case 't':
@@ -102,17 +106,17 @@ char* strptime(const char* s,const char*
 	break;
       case 'S':
 	i=getint(&s,2);
-	if (i==-1 || i>60) return (char*)s;
+	if (i==-1 || i>60) return NULL;
 	tm->tm_sec=i;
 	break;
       case 'T':
 	s=strptime(s,"%H:%M:%S",tm);
 	break;
       case 'U': case 'W':
-	if (getint(&s,2)==-1) return (char*)s;
+	if (getint(&s,2)==-1) return NULL;
 	break;
       case 'w':
-	if (*s<'0' || *s>'6') return (char*)s;
+	if (*s<'0' || *s>'6') return NULL;
 	++s;
 	break;
       case 'x':
@@ -123,22 +127,28 @@ char* strptime(const char* s,const char*
 	break;
       case 'y':
 	i=getint(&s,2);
-	if (i<0) return (char*)s;
+	if (i<0) return NULL;
 	tm->tm_year=(i<69)?i+100:i;
 	break;
       case 'Y':
-	i=getint(&s,5);
-	if (i==-1) return (char*)s;
+	i=getint(&s,4);
+	if (i==-1) return NULL;
 	tm->tm_year=i-1900;
 	break;
       }
+      if (!s) return NULL;
       ++format;
       break;
     default:
-      if (*s != *format) return (char*)s;
+      if (*s != *format) return NULL;
       ++format; ++s;
       break;
-      }
+    }
   }
+  
+  day  = (tm->tm_year - 70) * 365 + (tm->tm_year - 69) / 4;
+  day += tm->tm_yday = __spm [tm->tm_mon] + tm->tm_mday-1 + (__isleap (tm->tm_year+1900) & (tm->tm_mon > 1));
+  tm->tm_wday = (day + 4) % 7;
+
   return (char*)s;
 }
