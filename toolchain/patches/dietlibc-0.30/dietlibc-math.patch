--- dietlibc-0.30/lib/__finite.c.math	2003-03-24 03:04:46.000000000 +0100
+++ dietlibc-0.30/lib/__finite.c	2010-09-17 22:10:40.000000000 +0200
@@ -1,7 +1,22 @@
 #include <math.h>
+#include <inttypes.h>
 
 int finite(double d) {
   return isinf(d)==0 && isnan(d)==0;
 }
 
+int finitel(long double d) {
+  return finite((double) d);
+}
+
+int finitef(float f) {
+  union {
+    float value;
+    uint32_t word;
+  } u;
+  u.value = f;
+  return (int)((uint32_t)((u.word&0x7fffffff)-0x7f800000)>>31);
+}
+
 int __finite(double d) __attribute__((alias("finite")));
+int __finitef(float d) __attribute__((alias("finitef")));
--- dietlibc-0.30/include/math.h.math	2004-08-04 00:28:46.000000000 +0200
+++ dietlibc-0.30/include/math.h	2010-09-17 22:13:14.000000000 +0200
@@ -72,14 +72,12 @@ double atan2(double x, double y) __THROW
 
 double copysign(double value, double sign) __attribute__((__const__));
 
-#  define HUGE_VAL \
-  (__extension__ \
-   ((union { unsigned long long __ll; double __d; }) \
-    { __ll: 0x7ff0000000000000ULL }).__d)
-#  define HUGE_VALF \
-  (__extension__ \
-   ((union { unsigned int __i; float __f; }) \
-    { __i: 0x7f800000UL }).__f)
+#ifndef HUGE_VAL
+#  define HUGE_VAL (__extension__ ((union { unsigned long long __ll; double __d; }) { __ll: 0x7ff0000000000000ULL }).__d)
+#endif
+#ifndef HUGE_VALF
+#  define HUGE_VALF (__extension__ ((union { unsigned int __i; float __f; }) { __i: 0x7f800000UL }).__f)
+#endif
 
 #ifdef _GNU_SOURCE
 void sincos(double x, double* sinx, double* cosx);
@@ -89,6 +87,14 @@ double ipow (double mant, int expo);
 int isnan(double d) __attribute__((__const__));
 int isinf(double d) __attribute__((__const__));
 int finite(double d) __attribute__((__const__));
+int finitef(float d) __attribute__((__const__));
+int finitel(long double d) __attribute__((__const__));
+ 
+#define isfinite(x)		      \
+     (sizeof (x) == sizeof (float)    \
+      ? __finitef (x)		      \
+      : sizeof (x) == sizeof (double) \
+      ? __finite (x) : __finitel (x))
 
 double j0(double x);
 double j1(double x);
