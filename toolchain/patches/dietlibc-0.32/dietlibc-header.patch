--- dietlibc-0.30/include/inttypes.h.header	2005-03-15 09:51:22.000000000 +0100
+++ dietlibc-0.30/include/inttypes.h	2009-01-15 20:47:53.000000000 +0100
@@ -265,10 +265,10 @@ __extension__ typedef signed long long i
 __extension__ typedef unsigned long long uint64_t;
 __extension__ typedef signed long long int intmax_t;
 __extension__ typedef unsigned long long int uintmax_t;
-#endif
 
 intmax_t strtoimax (const char *nptr, char **endptr, int base);
 uintmax_t strtoumax (const char *nptr, char **endptr, int base);
+#endif
 
 __END_DECLS
 
--- dietlibc-0.30/include/asm/i386-sigcontext.h.header	2005-09-21 09:33:08.000000000 +0200
+++ dietlibc-0.30/include/asm/i386-sigcontext.h	2009-01-15 20:47:53.000000000 +0100
@@ -38,7 +38,6 @@ struct _fpstate {
 };
 
 #define X86_FXSR_MAGIC		0x0000
-#define PC(ctx) (ctx.eip)
 
 struct sigcontext {
 	__u16         gs, __gsh;
--- dietlibc-0.30/include/time.h.header	2005-10-04 19:47:03.000000000 +0200
+++ dietlibc-0.30/include/time.h	2009-01-15 20:47:53.000000000 +0100
@@ -4,7 +4,6 @@
 #include <sys/cdefs.h>
 #include <sys/time.h>
 #include <signal.h>
-#include <unistd.h>
 
 __BEGIN_DECLS
 
--- dietlibc-0.30/include/strings.h.header	2003-08-19 18:58:17.000000000 +0200
+++ dietlibc-0.30/include/strings.h	2009-01-15 20:47:53.000000000 +0100
@@ -10,17 +10,19 @@ int strcasecmp(const char *s1, const cha
 int strncasecmp(const char *s1, const char *s2, size_t n) __THROW __pure;
 int ffs(int i) __THROW __attribute__((__const__));
 
+#if defined(__cplusplus)
 int    bcmp(const void *, const void *, size_t) __THROW __pure __attribute_dontuse__;
 void   bcopy(const void *, void *, size_t) __THROW __attribute_dontuse__;
 void   bzero(void *, size_t) __THROW __attribute_dontuse__;
 char  *index(const char *, int) __THROW __pure __attribute_dontuse__;
 char  *rindex(const char *, int) __THROW __pure __attribute_dontuse__;
-
+#else
 #define bzero(s,n) memset(s,0,n)
 #define bcopy(src,dest,n) memmove(dest,src,n)
 #define bcmp(a,b,n) memcmp(a,b,n)
 #define index(a,b) strchr(a,b)
 #define rindex(a,b) strrchr(a,b)
+#endif
 
 __END_DECLS
 
--- dietlibc-0.30/include/netinet/ip_icmp.h.header	2003-08-19 18:58:18.000000000 +0200
+++ dietlibc-0.30/include/netinet/ip_icmp.h	2009-01-15 20:47:53.000000000 +0100
@@ -144,6 +144,79 @@ struct icmphdr {
 	(type) == ICMP_IREQ || (type) == ICMP_IREQREPLY || \
 	(type) == ICMP_MASKREQ || (type) == ICMP_MASKREPLY)
 
+struct icmp_ra_addr
+{
+  uint32_t ira_addr;
+  uint32_t ira_preference;
+};
+
+
+struct icmp
+{
+  uint8_t  icmp_type;	/* type of message, see below */
+  uint8_t  icmp_code;	/* type sub code */
+  uint16_t icmp_cksum;	/* ones complement checksum of struct */
+  union
+  {
+    unsigned char ih_pptr;		/* ICMP_PARAMPROB */
+    struct in_addr ih_gwaddr;	/* gateway address */
+    struct ih_idseq		/* echo datagram */
+    {
+      uint16_t icd_id;
+      uint16_t icd_seq;
+    } ih_idseq;
+    uint32_t ih_void;
+
+    /* ICMP_UNREACH_NEEDFRAG -- Path MTU Discovery (RFC1191) */
+    struct ih_pmtu
+    {
+      uint16_t ipm_void;
+      uint16_t ipm_nextmtu;
+    } ih_pmtu;
+
+    struct ih_rtradv
+    {
+      uint8_t irt_num_addrs;
+      uint8_t irt_wpa;
+      uint16_t irt_lifetime;
+    } ih_rtradv;
+  } icmp_hun;
+#define	icmp_pptr	icmp_hun.ih_pptr
+#define	icmp_gwaddr	icmp_hun.ih_gwaddr
+#define	icmp_id		icmp_hun.ih_idseq.icd_id
+#define	icmp_seq	icmp_hun.ih_idseq.icd_seq
+#define	icmp_void	icmp_hun.ih_void
+#define	icmp_pmvoid	icmp_hun.ih_pmtu.ipm_void
+#define	icmp_nextmtu	icmp_hun.ih_pmtu.ipm_nextmtu
+#define	icmp_num_addrs	icmp_hun.ih_rtradv.irt_num_addrs
+#define	icmp_wpa	icmp_hun.ih_rtradv.irt_wpa
+#define	icmp_lifetime	icmp_hun.ih_rtradv.irt_lifetime
+  union
+  {
+    struct
+    {
+      uint32_t its_otime;
+      uint32_t its_rtime;
+      uint32_t its_ttime;
+    } id_ts;
+    struct
+    {
+      struct ip idi_ip;
+      /* options and then 64 bits of data */
+    } id_ip;
+    struct icmp_ra_addr id_radv;
+    uint32_t   id_mask;
+    uint8_t    id_data[1];
+  } icmp_dun;
+#define	icmp_otime	icmp_dun.id_ts.its_otime
+#define	icmp_rtime	icmp_dun.id_ts.its_rtime
+#define	icmp_ttime	icmp_dun.id_ts.its_ttime
+#define	icmp_ip		icmp_dun.id_ip.idi_ip
+#define	icmp_radv	icmp_dun.id_radv
+#define	icmp_mask	icmp_dun.id_mask
+#define	icmp_data	icmp_dun.id_data
+};
+
 __END_DECLS
 
 #endif
--- dietlibc-0.30/include/sys/param.h.header	2003-03-30 21:19:53.000000000 +0200
+++ dietlibc-0.30/include/sys/param.h	2009-01-15 20:47:53.000000000 +0100
@@ -3,6 +3,7 @@
 
 #include <limits.h>
 
+#define MAXSYMLINKS	20
 #define MAXPATHLEN	PATH_MAX
 #define MAXHOSTNAMELEN	64
 #define NGROUPS		32
--- dietlibc-0.30/include/sys/resource.h.header	2003-11-24 21:32:04.000000000 +0100
+++ dietlibc-0.30/include/sys/resource.h	2009-01-15 20:47:53.000000000 +0100
@@ -76,6 +76,7 @@ struct rlimit {
 #define RLIM_NLIMITS	11
 
 #define RLIM_INFINITY ((long)(~0UL>>1))
+#define RLIM64_INFINITY 0xffffffffffffffffuLL
 
 int getpriority(int which, int who) __THROW;
 int setpriority(int which, int who, int prio) __THROW;
@@ -84,7 +85,18 @@ int getrlimit (int resource, struct rlim
 int getrusage (int who, struct rusage *usage);
 int setrlimit (int resource, const struct rlimit *rlim);
 
+typedef unsigned long long rlim64_t;
+#if defined _FILE_OFFSET_BITS && _FILE_OFFSET_BITS == 64
+typedef rlim64_t rlim_t;
+#else
 typedef unsigned long rlim_t;
+#endif
+
+struct rlimit64 {
+  rlim64_t rlim_cur;
+  rlim64_t rlim_max;
+};
+
 
 __END_DECLS
 
--- dietlibc-0.30/include/sys/syscall.h.header	2005-05-01 22:21:09.000000000 +0200
+++ dietlibc-0.30/include/sys/syscall.h	2009-01-15 20:47:53.000000000 +0100
@@ -2,6 +2,7 @@
 #define _SYSCALL_H
 
 #include <asm/unistd.h>
+#include <bits/syscall.h>
 
 int syscall(int number, ...);
 
--- dietlibc-0.30/include/sys/ptrace.h.header	2005-09-21 09:33:08.000000000 +0200
+++ dietlibc-0.30/include/sys/ptrace.h	2009-01-15 20:47:53.000000000 +0100
@@ -402,6 +402,22 @@ struct user_regs_struct
 #define CC_N_BIT	(1 << 31)
 #define PCMASK		0
 
+#define PTRACE_GETREGS          12
+#define PTRACE_SETREGS          13
+#define PTRACE_GETFPREGS        14
+#define PTRACE_SETFPREGS        15
+/* PTRACE_ATTACH is 16 */
+/* PTRACE_DETACH is 17 */
+#define PTRACE_GETWMMXREGS      18
+#define PTRACE_SETWMMXREGS      19
+/* 20 is unused */
+#define PTRACE_OLDSETOPTIONS    21
+#define PTRACE_GET_THREAD_AREA  22
+#define PTRACE_SET_SYSCALL      23
+/* PTRACE_SYSCALL is 24 */
+#define PTRACE_GETCRUNCHREGS    25
+#define PTRACE_SETCRUNCHREGS    26
+
 struct pt_regs {
 	long uregs[18];
 };
