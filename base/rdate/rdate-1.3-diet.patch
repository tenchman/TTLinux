--- rdate-1.3/rdate.c.diet	2003-09-23 09:51:38.000000000 +0200
+++ rdate-1.3/rdate.c	2003-09-23 10:35:47.000000000 +0200
@@ -31,7 +31,6 @@
 #include <assert.h>
 #include <inttypes.h>
 #include <time.h>
-#include <syslog.h>
 #include <stdarg.h>
 
 /* difference between Unix time and net time */
@@ -43,33 +42,18 @@
 /* Use TCP connect by default */
 static int use_tcp = 1;
 /* send stuff to syslog instead of stderr */
-static int log_mode = 0;
 static int print_mode = 0;
 
-/* syslog output requested by Michael Sanford <mtsanford@cryptobit.org>,
-   based on ideas from his patch implementing it. */
-static void writeLog(int is_error, char *format, ...)
+static void hosterror(const char *msg, const char *host)
 {
-  va_list args;
-  int n;
-  char buf[2048];
-  va_start(args, format);
-  n = vsnprintf(buf, sizeof(buf), format, args);
-  va_end(args);
-
-  if(n < 1)
-    return; /* Error, which we can't report because this _is_ the error
-	       reporting mechanism */
-  if(log_mode)
-    syslog(is_error?LOG_WARNING:LOG_INFO, buf);
-  if(is_error || print_mode)
-    fprintf(is_error?stderr:stdout, "%s: %s\n", argv0, buf);
+    write(2, msg,  strlen(msg));
+    write(2, host, strlen(host));
+    write(2, "\n", 1);
 }
 
 static int
 rdate(const char *hostname, time_t *retval)
 {
-  struct servent *sent;
   struct sockaddr_in saddr;
   int fd;
   unsigned char time_buf[4];
@@ -87,7 +71,7 @@
       hent = gethostbyname(hostname);
       if(!hent)
 	{
-	  writeLog(1, "Unknown host %s: %s", hostname, hstrerror(h_errno));
+	  hosterror("Unknown host ", hostname);
 	  return -1;
 	}
 
@@ -95,10 +79,7 @@
       memcpy(&saddr.sin_addr, hent->h_addr_list[0], hent->h_length);
     }
 
-  if((sent = getservbyname("time", "tcp")))
-    saddr.sin_port = sent->s_port;      
-  else
-    saddr.sin_port = htons(DEFAULT_PORT);
+  saddr.sin_port = htons(DEFAULT_PORT);
 
   if (use_tcp)
     fd = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);
@@ -107,14 +88,14 @@
 
   if(fd < 0)
     {
-      writeLog(1, "couldn't create socket: %s", strerror(errno));
+      write(2, "couldn't create socket", 22);
       return -1;
     }
 
   if (use_tcp) {
-    if(connect(fd, &saddr, sizeof(saddr)))
+    if(connect(fd, (struct sockaddr *) &saddr, sizeof(saddr)))
       {
-        writeLog(1, "couldn't connect to host %s: %s", hostname, strerror(errno));
+        hosterror("couldn't connect to host ", hostname);
         close(fd);
         return -1;
       }
@@ -124,26 +105,26 @@
     if(n_toread)
       {
         if(nr)
-	  writeLog(1, "error in read: %s", strerror(errno));
+	  write(2, "error in read\n", 14);
         else
-	  writeLog(1, "got EOF from time server");
+	  write(2, "got EOF from time server\n", 25);
         close(fd);
 
         return -1;
       }
   } else {
-    if (sendto(fd, NULL, 0, 0, &saddr, sizeof(saddr))) {
-      writeLog(1, "couldn't send UDP message to host %s: %s", hostname, strerror(errno));
+    if (sendto(fd, NULL, 0, 0, (struct sockaddr *) &saddr, sizeof(saddr))) {
+      hosterror("couldn't send UDP message to host ",hostname);
       close(fd);
       return -1;
     }
 
-    if (recvfrom(fd, &time_buf, sizeof(time_buf), 0, &saddr, &nr) != 4)
+    if (recvfrom(fd, &time_buf, sizeof(time_buf), 0, (struct sockaddr *) &saddr, &nr) != 4)
     {
       if(nr)
-	writeLog(1, "error in read: %s", strerror(errno));
+	write(2, "error in read\n", 14);
       else
-	writeLog(1, "got EOF from time server");
+	write(2, "got EOF from time server\n", 25);
       close(fd);
       return -1;
     }
@@ -160,7 +141,7 @@
 static void
 usage(int iserr)
 {
-  fprintf(stderr, "Usage: %s [-s] [-p] [-u] [-l] <host> ...\n", argv0);
+  write(2, "Usage: rdate [-s] [-p] [-u] <host> ...\n", 39);
   exit(iserr?1:0);
 }
 
@@ -195,15 +176,14 @@
 	    case 'u':
 	      use_tcp = 0;
 	      break;
-	    case 'l':
-	      log_mode = 1;
-	      break;
 	    case 'h':
 	    case '?':
 	      usage(0);
 	      break;
 	    default:
-	      fprintf(stderr, "Unknown option %s\n", argv[i]);
+	      write(2, "Unknown option ", 15);
+	      write(2, argv[i], strlen(argv[i]));
+	      write(2, "\n", 1);
 	      break;
 	    }
 	  break;
@@ -216,8 +196,6 @@
 
   if(!set_mode && !print_mode)
     print_mode = 1;
-  if(log_mode)
-    openlog(argv0, LOG_PID, LOG_CRON);
 
   alarm(10);
 
@@ -229,12 +207,15 @@
 	  /* keep track of the succesful request */
 	  success = 1;
 
-	  writeLog(0, "[%s]\t%s", hosts[i], ctime(&timeval));
+	  write(1, "[", 1);
+	  write(1, hosts[i], strlen(hosts[i]));
+	  write(1, "]\t", 2);
+	  write(1, ctime(&timeval), strlen(ctime(&timeval)));
 
 	  /* Do specified action(s) */
 	  if(set_mode && stime(&timeval) < 0)
 	    {
-	      writeLog(1, "%s: could not set system time: %s", strerror(errno));
+	      write(2, "could not set system time\n", 26);
 	      retval = 1;
 	      break;
 	    }
