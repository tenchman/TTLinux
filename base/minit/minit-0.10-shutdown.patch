--- minit-0.10/shutdown.c.shutdown	2004-01-29 15:40:45.000000000 +0100
+++ minit-0.10/shutdown.c	2006-07-27 11:19:21.000000000 +0200
@@ -25,6 +25,7 @@
 #include <stdarg.h>
 #include <stdio.h>
 #include <stdlib.h>
+#include <errno.h>
 #include <sys/wait.h>
 
 #include "str.h"
@@ -146,14 +168,21 @@
 #endif
 
 void printUsage() {
-  __write2("usage: shutdown -[rhosmn] -[t secs]\n"
-                "\t -r:        reboot after shutdown\n"
-                "\t -h:        halt after shutdown\n"
-		"\t -o:	       power-off after shutdown\n"
-		"\t -s:	       single-user console after shutdown\n"
-		"\t -m:	       only shutdown the minit-part\n"
-                "\t -n:        do not shutdown services using minit\n"
-      		"\t -t secs:   delay between SIGTERM and SIGKILL\n");
+  __write2("usage: shutdown -[rhosmn] -[t secs] time\n"
+	   "\t -r:        reboot after shutdown\n"
+	   "\t -h:        halt after shutdown\n"
+	   "\t -o:        power-off after shutdown\n"
+	   "\t -s:        single-user console after shutdown\n"
+	   "\t -m:        only shutdown the minit-part\n"
+	   "\t -n:        do not shutdown services using minit\n"
+	   "\t -t secs:   delay between SIGTERM and SIGKILL\n");
+}
+
+static int secs = 0;
+static void sighandler(int signum)
+{
+  secs = 0;
+  sleep(3);
 }
 
 int main(int argc, char *const argv[]) {
@@ -164,6 +192,7 @@
    * 2: power off
    */
   unsigned int cfg_delay = 3;
+  char *when, *end;
   int cfg_minitonly = 0;
   int cfg_sulogin = 0;
 
@@ -207,8 +236,25 @@
     }
   }
   
+  if (optind == argc) {
+    printUsage(); 
+    return 1;
+  }
+
+  when = argv[optind++];
+  if (!(strcmp(when, "now")))
+    secs = 0;
+  else if (when[0]=='+') {
+    secs = strtol(when+1, &end, 10);
+    if (*end != 's')
+      secs *= 60;
+  } else {
+    printUsage(); 
+    return 1;
+  }
+
   opendevconsole();
-  
+
   switch (cfg_downlevel) {
 	  case 0:
 		  wall("system is going down for reboot NOW\n");
@@ -220,6 +266,9 @@
 		  wall("system is going down for power-off NOW\n");
 		  break;
   }
+  
+  signal(SIGALRM, sighandler);
+  sleep(secs);
 
   /* 
    * catch some signals; 
@@ -258,18 +307,25 @@
   sync();
 
   exec_cmd("/sbin/swapoff", "swapoff", "-a", (char *) 0);
-  exec_cmd("/bin/umount", "umount", "-a", (char *) 0);
+  exec_cmd("/bin/umount", "umount", "-ar", (char *) 0);
   exec_cmd("/bin/mount", "mount", "-o", "remount,ro", "/", (char *) 0);
-
-  sync();
+  exec_cmd("/bin/sh",  "sh",  "-c", "/etc/debug", (char *) 0);
 
   /* and finally reboot, halt or power-off the system */ 
   if (cfg_downlevel == 0) {
-    reboot(RB_AUTOBOOT);
+    c=reboot(RB_AUTOBOOT);
   } else if (cfg_downlevel == 1) {
-    reboot(RB_HALT_SYSTEM);
+    c=reboot(RB_HALT_SYSTEM);
   } else {
-    reboot(RB_POWER_OFF);
+    c=reboot(RB_POWER_OFF);
   }
+  
+  if (c) {
+    __write2("reboot() failed, ");
+    __write2(strerror(errno));
+    __write2("\n");
+    return 1;
+  }
+  
   return 0;
 }
