diff -up linux/arch/arm/mach-ixp4xx/ixdp425-setup.c.patchit linux/arch/arm/mach-ixp4xx/ixdp425-setup.c
--- linux/arch/arm/mach-ixp4xx/ixdp425-setup.c.patchit	2008-07-16 17:23:57.000000000 +0200
+++ linux/arch/arm/mach-ixp4xx/ixdp425-setup.c	2008-07-16 17:35:07.000000000 +0200
@@ -16,6 +16,8 @@
 #include <linux/serial_8250.h>
 #include <linux/slab.h>
 #include <linux/i2c-gpio.h>
+#include <linux/leds.h>
+#include <linux/reboot.h>
 
 #include <asm/types.h>
 #include <asm/setup.h>
@@ -25,6 +27,8 @@
 #include <asm/irq.h>
 #include <asm/mach/arch.h>
 #include <asm/mach/flash.h>
+#include <asm/io.h>
+#include <asm/gpio.h>
 
 static struct flash_platform_data ixdp425_flash_data = {
 	.map_name	= "cfi_probe",
@@ -59,6 +63,21 @@ static struct platform_device ixdp425_i2
 	.num_resources	= 0
 };
 
+static struct resource ixdp425_led_resources[] = {
+	{
+		.name		= "ready", /* green led */
+		.start		= 0,  /* pin0 = ready-led */
+		.end		= 0,
+		.flags		= IXP4XX_GPIO_LOW,
+	},
+};
+
+static struct platform_device ixdp425_leds = {
+	.name			= "IXP4XX-GPIO-LED",
+	.id			= -1,
+	.num_resources		= ARRAY_SIZE(ixdp425_led_resources),
+	.resource		= ixdp425_led_resources,
+};
 static struct resource ixdp425_uart_resources[] = {
 	{
 		.start		= IXP4XX_UART1_BASE_PHYS,
@@ -105,9 +124,33 @@ static struct platform_device ixdp425_ua
 static struct platform_device *ixdp425_devices[] __initdata = {
 	&ixdp425_i2c_gpio,
 	&ixdp425_flash,
-	&ixdp425_uart
+	&ixdp425_uart,
+	&ixdp425_leds,
 };
 
+static void ixdp425_power_off(void)
+{
+	/* hardware reset per gpio */
+	/* This causes the box to drop the power and go dead. */
+	printk(KERN_DEBUG "ixdp425_power_off called\n");
+	/* enable the pwr cntl gpio */
+	/* gpio_line_config(2, IXP4XX_GPIO_OUT); */
+
+	/* do the deed */
+	gpio_line_set(2, IXP4XX_GPIO_HIGH);
+}
+
+static irqreturn_t ixdp425_reset_handler(int irq, void *dev_id)
+{
+	        /* This is the paper-clip reset, it shuts the machine down directly.
+		 *          */
+	        ctrl_alt_del();
+		/*ixdp425_power_off();*/
+
+		return IRQ_HANDLED;
+}
+
+
 static char ixdp425_rtc_probe[] __initdata = "rtc-x1205.probe=0,0x6f ";
 
 static void __init ixdp425_fixup(struct machine_desc *desc,
@@ -144,6 +187,12 @@ static void __init ixdp425_init(void)
 	ixdp425_flash_resource.start = IXP4XX_EXP_BUS_BASE(0);
 	ixdp425_flash_resource.end =
 		IXP4XX_EXP_BUS_BASE(0) + ixp4xx_exp_bus_size - 1;
+	pm_power_off = ixdp425_power_off;
+	/* register IRQ for reset. reset-button on gpio-pin 1 */
+       if (request_irq(gpio_to_irq(1), &ixdp425_reset_handler,IRQF_DISABLED | IRQF_TRIGGER_LOW,"pico reset button", NULL) < 0) {
+
+          printk(KERN_DEBUG "Reset Button IRQ not available\n");
+       }
 
 	if (cpu_is_ixp43x()) {
 		ixdp425_uart.num_resources = 1;
