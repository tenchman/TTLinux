--- dropbear-0.48.1/scp.c.scp	2006-03-18 11:44:28.000000000 +0100
+++ dropbear-0.48.1/scp.c	2006-03-18 11:56:36.000000000 +0100
@@ -117,7 +117,7 @@
 static int
 do_local_cmd(arglist *a)
 {
-	u_int i;
+	int i;
 	int status;
 	pid_t pid;
 
@@ -589,8 +589,8 @@
 	struct stat stb;
 	static BUF buffer;
 	BUF *bp;
-	off_t i, amt, statbytes;
-	size_t result;
+	off_t statbytes;
+	size_t i, amt, result;
 	int fd = -1, haderr, indx;
 	char *last, *name, buf[2048];
 	int len;
@@ -636,8 +636,8 @@
 			 * versions expecting microseconds.
 			 */
 			(void) snprintf(buf, sizeof buf, "T%lu 0 %lu 0\n",
-			    (u_long) stb.st_mtime,
-			    (u_long) stb.st_atime);
+			    (unsigned long) stb.st_mtime,
+			    (unsigned long) stb.st_atime);
 			(void) atomicio(vwrite, remout, buf, strlen(buf));
 			if (response() < 0)
 				goto next;
@@ -720,8 +720,8 @@
 		last++;
 	if (pflag) {
 		(void) snprintf(path, sizeof(path), "T%lu 0 %lu 0\n",
-		    (u_long) statp->st_mtime,
-		    (u_long) statp->st_atime);
+		    (unsigned long) statp->st_mtime,
+		    (unsigned long) statp->st_atime);
 		(void) atomicio(vwrite, remout, path, strlen(path));
 		if (response() < 0) {
 			closedir(dirp);
@@ -760,7 +760,7 @@
 {
 	static struct timeval bwstart, bwend;
 	static int lamt, thresh = 16384;
-	u_int64_t waitlen;
+	uint64_t waitlen;
 	struct timespec ts, rm;
 
 	if (!timerisset(&bwstart)) {
@@ -818,10 +818,9 @@
 		YES, NO, DISPLAYED
 	} wrerr;
 	BUF *bp;
-	off_t i;
-	size_t j, count;
-	int amt, exists, first, mask, mode, ofd, omode;
-	off_t size, statbytes;
+	size_t amt, i, j, size, count;
+	int exists, first, mask, mode, ofd, omode;
+	off_t statbytes;
 	int setimes, targisdir, wrerrno = 0;
 	char ch, *cp, *np, *targ, *why, *vect[1], buf[2048];
 	struct timeval tv[2];
@@ -1020,7 +1019,7 @@
 				/* Keep reading so we stay sync'd up. */
 				if (wrerr == NO) {
 					if (atomicio(vwrite, ofd, bp->buf,
-					    count) != count) {
+					    count) != (ssize_t)count) {
 						wrerr = YES;
 						wrerrno = errno;
 					}
@@ -1034,7 +1033,7 @@
 			stop_progress_meter();
 #endif
 		if (count != 0 && wrerr == NO &&
-		    atomicio(vwrite, ofd, bp->buf, count) != count) {
+		    atomicio(vwrite, ofd, bp->buf, count) != (ssize_t)count) {
 			wrerr = YES;
 			wrerrno = errno;
 		}
